{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, of, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CityService = /*#__PURE__*/(() => {\n  class CityService {\n    constructor(http) {\n      this.http = http;\n      this.travel = [];\n      this.travelSubject = new Subject();\n      this.urlAPIAutocomplete = \"https://api.comparatrip.eu/cities/autocomplete/?q=\";\n      this.urlAPIPopular = \"https://api.comparatrip.eu/cities/popular/5\";\n      this.urlAPIPopularFrom = \"https://api.comparatrip.eu/cities/popular/from\";\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-type': 'application/json'\n        })\n      };\n    }\n\n    getPop() {\n      return this.http.get(`${this.urlAPIPopular}`, {\n        withCredentials: false,\n        observe: 'response'\n      }).pipe(catchError(err => {\n        return of(err);\n      }));\n    }\n\n    getPopArrival(id) {\n      return this.http.get(`${this.urlAPIPopularFrom}/${id}/5`, {\n        withCredentials: false,\n        observe: 'response'\n      }).pipe(catchError(err => {\n        return of(err);\n      }));\n    }\n\n    search(str) {\n      return this.http.get(`${this.urlAPIAutocomplete}${str}`, {\n        withCredentials: false,\n        observe: 'response'\n      }).pipe(catchError(err => {\n        return of(err);\n      }));\n    }\n\n    emitTravelSubject() {\n      this.travelSubject.next(this.travel.slice());\n    }\n\n    addTravel(dep, arr, date, hour, depVal, arrVal) {\n      const travelObject = {\n        dep: '',\n        arr: '',\n        date: '',\n        hour: '',\n        depVal: '',\n        arrVal: ''\n      };\n      console.table(travelObject);\n      travelObject.dep = dep;\n      travelObject.arr = arr;\n      travelObject.date = date;\n      travelObject.hour = hour;\n      travelObject.depVal = depVal;\n      travelObject.arrVal = arrVal;\n      this.travel.push(travelObject);\n      this.emitTravelSubject();\n    }\n\n  }\n\n  CityService.ɵfac = function CityService_Factory(t) {\n    return new (t || CityService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CityService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CityService,\n    factory: CityService.ɵfac,\n    providedIn: 'root'\n  });\n  return CityService;\n})();","map":null,"metadata":{},"sourceType":"module"}